{"version":3,"sources":["redux/actions/actions.ts","redux/reducers/GeneralReducer.ts","redux/store.ts","pages/IntroductionPage/IntroductionPage.tsx","pages/RegisterPage/RegisterPage.tsx","firebase/config.ts","DAOs/UsuarioDAO.ts","pages/AccountPage/AccountPage.tsx","pages/LoginPage/LoginPage.tsx","pages/EditPage/EditPage.tsx","App.js","serviceWorker.js","index.js"],"names":["Actions","initialState","userData","userLogged","GeneralReducer","state","type","payload","Store","createStore","combineReducers","general","connect","dispatch","props","story","useHistory","React","value","classes","makeStyles","root","position","bottom","width","useStyles","className","Button","variant","color","onClick","push","style","fontSize","to","BottomNavigation","showLabels","BottomNavigationAction","label","icon","setUserData","ala","setAla","tempo","setTempo","left","backgroundColor","zIndex","textField","marginBottom","tempoNegocio","array","i","arrayTempoNegocio","onSubmit","e","preventDefault","form","target","nome","nome_negocio","telefone","endereco","tempo_negocio","definicao","faturamento_mensal","oferecimento_produto","Grid","container","spacing","item","xs","TextField","fullWidth","name","placeholder","required","select","onChange","map","index","MenuItem","key","multiline","InputProps","startAdornment","InputAdornment","firebaseImpl","firebase","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firebaseDatabase","firestore","firebaseAuth","auth","UsuarioDAO","createUsuario","usuario","a","email","collection","doc","set","createUserWithAuth","senha","createUserWithEmailAndPassword","user","login","signInWithEmailAndPassword","get","res","exists","data","id","useState","errorPassword","setErrorPassword","loading","setLoading","confirm_senha","alert","error","helperText","disabled","setUserLogged","password","message","defaultValue","App","store","path","component","IntroductionPage","exact","RegisterPage","AccountPage","LoginPage","EditPage","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.20083daa.chunk.js","sourcesContent":["export const Actions = {\r\n    setUserData: 'SET_USER_DATA',\r\n    setUserLogged: 'SET_USER_LOGGED',\r\n}\r\n","import {Actions} from \"../actions/actions\";\r\n\r\nconst initialState = {\r\n    userData: {},\r\n    userLogged: null,\r\n}\r\n\r\nconst GeneralReducer = (state = initialState, {type, payload}) => {\r\n    switch (type) {\r\n        case Actions.setUserData:\r\n            return {...state, userData: payload}\r\n        case Actions.setUserLogged:\r\n            return {...state, userLogged: payload}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default GeneralReducer\r\n","import {createStore, combineReducers} from \"redux\";\r\nimport GeneralReducer from \"./reducers/GeneralReducer\";\r\n\r\nconst Store = createStore(combineReducers({\r\n    general: GeneralReducer\r\n}));\r\n\r\nexport default Store;\r\n","import * as React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {Button, BottomNavigation, BottomNavigationAction} from '@material-ui/core'\r\nimport \"./IntroductionPage.sass\"\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {useHistory, Link} from 'react-router-dom'\r\nimport MoodIcon from '@material-ui/icons/Mood'\r\nimport SubjectIcon from '@material-ui/icons/Subject'\r\nimport LockOpen from '@material-ui/icons/LockOpen'\r\n\r\nconst IntroductionPage = props => {\r\n\r\n const story = useHistory()\r\n const [value, setValue] = React.useState(0)\r\n\r\n    const useStyles = makeStyles({\r\n        root: {\r\n            position: 'fixed',\r\n            bottom: '5px',\r\n            width: '100%'\r\n        }\r\n    })\r\n\r\n    const classes = useStyles()\r\n\r\n return (\r\n   <div className={'intro_page'}>\r\n       <div className={'content'}>\r\n       <h1>Bem-Vindos</h1>\r\n       <p>Ao programa <b>Comunidade dos Santos</b>! Nós estaremos recolhendo\r\n            informações de membros empreendedores, lojistas, informais, prestadores de serviço, e afins com um\r\n            intuito, de fazer com que possamos crescer como Igreja e como comunidade visando fortalecer a autossuficiência\r\n            nesse período de crise.</p>\r\n     <Button variant={'contained'}\r\n             color={'primary'}\r\n             onClick={() => story.push('/register')}>Começar cadastro</Button>\r\n           <p style={{fontSize: '1.2em'}}>Já é cadastrado? <Link to={'/login'}>Fazer Login</Link></p>\r\n       </div>\r\n        <BottomNavigation\r\n           value={value}\r\n           showLabels\r\n           className={classes.root}\r\n       >\r\n           <BottomNavigationAction label=\"Bem-Vindo\" icon={<MoodIcon />} />\r\n           <BottomNavigationAction label=\"Cadastro\" icon={<SubjectIcon />} />\r\n           <BottomNavigationAction label=\"Conta\" icon={<LockOpen />} />\r\n       </BottomNavigation>\r\n   </div>\r\n );\r\n}\r\n\r\nconst mapStateToProps = state => ({});\r\nconst mapDispatchToProps = dispatch => ({});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(IntroductionPage);\r\n","import * as React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {BottomNavigation, BottomNavigationAction, MenuItem, Grid, InputAdornment, Button} from \"@material-ui/core\";\r\nimport MoodIcon from \"@material-ui/icons/Mood\";\r\nimport SubjectIcon from \"@material-ui/icons/Subject\";\r\nimport LockOpen from \"@material-ui/icons/LockOpen\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport \"./RegisterPage.sass\"\r\nimport {Usuario} from \"../../DAOs/UsuarioDAO\";\r\nimport {Actions} from \"../../redux/actions/actions\";\r\nimport {useHistory} from 'react-router-dom';\r\n\r\nconst RegisterPage = props => {\r\n\r\n    const [value, setValue] = React.useState(1)\r\n    const [ala, setAla] = React.useState(\"Guarany\")\r\n    const [tempo, setTempo] = React.useState(1)\r\n    const story = useHistory()\r\n\r\n    const useStyles = makeStyles({\r\n        root: {\r\n            position: 'fixed',\r\n            bottom: '4px',\r\n            left: 0,\r\n            backgroundColor: '#FFF',\r\n            zIndex: 1001,\r\n            width: '100%'\r\n        },\r\n        textField: {\r\n            marginBottom: '10px'\r\n        }\r\n    })\r\n\r\n    const arrayTempoNegocio = () : Array<{value: number, label: string}> => {\r\n        let array = []\r\n        let maxYears = 5\r\n        //@ts-ignore\r\n        array.push({value: 6, label: 'Mais de 5 anos'})\r\n        for (let i = maxYears; i > 0; i--) {\r\n            if (i != 1) {\r\n                //@ts-ignore\r\n                array.push({value: i, label: i+' anos'})\r\n            } else {\r\n                //@ts-ignore\r\n                array.push({value: i, label: i+' ano'})\r\n            }\r\n        }\r\n        for (let i = 11; i > 2; i--) {\r\n            //@ts-ignore\r\n            array.push({value: i / 100, label: i + ' meses'})\r\n        }\r\n        //@ts-ignore\r\n        array.push({value: 2 / 100, label: 'menos de 3 meses'})\r\n\r\n        return array;\r\n    }\r\n\r\n    let tempoNegocio = arrayTempoNegocio()\r\n\r\n    const alas = [\"Guarany\", \"Cidade Nova\", \"Canaranas\", \"Campo Dourado\", \"Monte Sinai\", \"Riacho Doce\"]\r\n    const classes = useStyles()\r\n\r\n    const onSubmitForm = e => {\r\n        e.preventDefault()\r\n        const form = e.target\r\n\r\n        const userData : Usuario = {\r\n            nome: form.nome.value,\r\n            ala: form.ala.value,\r\n            nome_negocio: form.nome_negocio.value,\r\n            telefone: form.telefone.value,\r\n            endereco: form.endereco.value,\r\n            tempo_negocio: form.tempo_negocio.value,\r\n            definicao: form.definicao.value,\r\n            faturamento_mensal: form.faturamento_mensal.value,\r\n            oferecimento_produto: form.oferecimento_produto.value,\r\n        }\r\n\r\n        props.setUserData(userData)\r\n\r\n        story.push('/account')\r\n    }\r\n\r\n    // @ts-ignore\r\n    return (\r\n        <div className={'register_page'}>\r\n\r\n            <h1>Cadastro de Membro Empreendedor</h1>\r\n            <p>Preencha seus dados abaixo para fazer parte de nossa base de dados para que possamos adicionar você como prestador de serviços e fazer parte da comunidade dos santos!</p>\r\n            <form onSubmit={onSubmitForm}>\r\n                <Grid container spacing={2}>\r\n                    <Grid item xs={6}>\r\n                        <TextField fullWidth\r\n                                   name={'nome'}\r\n                            className={classes.textField} label={'Nome'} variant={'outlined'}\r\n                                   placeholder={'Exemplo: João Silva'} required/>\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                        <TextField\r\n                            name={'nome_negocio'}\r\n                            fullWidth className={classes.textField} label={'Nome do Negócio'} variant={'outlined'}\r\n                                   placeholder={'Exemplo: João Gás e Água'} required/>\r\n                    </Grid>\r\n                </Grid>\r\n                <TextField\r\n                    className={classes.textField}\r\n                    select\r\n                    label={'Ala'}\r\n                    value={ala}\r\n                    name={'ala'}\r\n                    onChange={(e) => setAla(e.target.value)}\r\n                    variant={'outlined'}\r\n                    placeholder={'Exemplo: João Gás e Água'}\r\n                    required>\r\n                    {alas.map((ala, index) =>\r\n                        <MenuItem\r\n                            value={ala}\r\n                            key={index}>\r\n                            {ala}\r\n                        </MenuItem>)}\r\n                </TextField>\r\n                <Grid container spacing={2}>\r\n                    <Grid item xs={6}>\r\n                        <TextField\r\n                            name={'telefone'}\r\n                            fullWidth\r\n                            className={classes.textField}\r\n                            label={'Telefone'} variant={'outlined'} placeholder={'Exemplo: 99999-9999'} required/>\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                        <TextField\r\n                            name={'email'}\r\n                            fullWidth\r\n                            className={classes.textField}\r\n                            label={'E-mail'} variant={'outlined'} placeholder={'Exemplo: joao@mail.com'} required/>\r\n                    </Grid>\r\n                </Grid>\r\n                <TextField\r\n                    name={'endereco'}\r\n                    className={classes.textField}\r\n                    label={'Endereço'} variant={'outlined'} placeholder={'Exemplo: R. 42, nº 0'} required/>\r\n                <TextField\r\n                    className={classes.textField}\r\n                    select\r\n                    name={'tempo_negocio'}\r\n                    label={'Tempo de Negócio'}\r\n                    value={tempo}\r\n                    onChange={(e) => {\r\n                        //@ts-ignore\r\n                        setTempo(e.target.value)\r\n                    }}\r\n                    variant={'outlined'}\r\n                    placeholder={'Exemplo: João Gás e Água'}\r\n                    required>\r\n                    {tempoNegocio.map((tempo, index) =>\r\n                        <MenuItem\r\n                            value={tempo.value}\r\n                            key={index}>\r\n                            {tempo.label}\r\n                        </MenuItem>)}\r\n                </TextField>\r\n                <TextField\r\n                    className={classes.textField}\r\n                    name={'definicao'}\r\n                    label={'Definição do Produto ou Serviço'} variant={'outlined'} placeholder={'Defina, com detalhes, todos os' +\r\n                ' detalhes de seu produto ou seviço cujo o qual você oferece.'} required multiline/>\r\n                <Grid container spacing={2}>\r\n                    <Grid item xs={6}>\r\n                        <TextField\r\n                            name={'faturamento_mensal'}\r\n                            fullWidth\r\n                            className={classes.textField}\r\n                                   InputProps={{\r\n                                       startAdornment: <InputAdornment position={'start'}> R$ </InputAdornment>\r\n                                   }}\r\n                            label={'Faturamento Mensal Médio'} variant={'outlined'} type={'number'} placeholder={'Exemplo: 2382,32'} required/>\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                        <TextField\r\n                                    name={'oferecimento_produto'}\r\n                                    fullWidth\r\n                                   className={classes.textField}\r\n                                   label={'Oferecimento do Produto'} variant={'outlined'} placeholder={'Exemplo: Produto Virtual, Físico ou Delivery'} required/>\r\n                    </Grid>\r\n                </Grid>\r\n                <Button type={'submit'} variant={'contained'} color={'primary'}>\r\n                    Confirmar Cadastro\r\n                </Button>\r\n            </form>\r\n            <div className={'content'}>\r\n                <BottomNavigation\r\n                    value={value}\r\n                    showLabels\r\n                    className={classes.root}\r\n                >\r\n                    <BottomNavigationAction label=\"Bem-Vindo\" icon={<MoodIcon/>}/>\r\n                    <BottomNavigationAction label=\"Cadastro\" icon={<SubjectIcon/>}/>\r\n                    <BottomNavigationAction label=\"Conta\" icon={<LockOpen/>}/>\r\n                </BottomNavigation>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => ({});\r\nconst mapDispatchToProps = dispatch => ({\r\n    setUserData: userData =>\r\n        dispatch({type: Actions.setUserData, payload: userData})\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RegisterPage);\r\n","import * as firebase from \"firebase\";\r\n\r\nlet Config = {\r\n    apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\r\n    authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\r\n    databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\r\n    projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\r\n    appId: process.env.REACT_APP_FIREBASE_APP_ID,\r\n    measurementId: process.env.REACT_APP_FIREBASE_MEASUREMENT_ID\r\n};\r\n\r\nexport const firebaseImpl = firebase.initializeApp(Config)\r\nexport const firebaseDatabase = firebaseImpl.firestore()\r\nexport const firebaseAuth = firebaseImpl.auth()\r\n","import {firebaseAuth, firebaseDatabase} from \"../firebase/config\";\r\n\r\nexport interface Usuario {\r\n    nome: string,\r\n    nome_negocio: string,\r\n    ala: string,\r\n    email?: string,\r\n    telefone: string,\r\n    endereco: string,\r\n    tempo_negocio: number,\r\n    faturamento_mensal: number,\r\n    definicao: string,\r\n    oferecimento_produto: string,\r\n    senha?: string,\r\n}\r\n\r\nconst COLLECTION = 'usuarios'\r\n\r\nconst UsuarioDAO = {\r\n    createUsuario: async (usuario: Usuario) => {\r\n        if (usuario.email) {\r\n            await firebaseDatabase.collection(COLLECTION).doc(usuario.email).set(usuario);\r\n        } else {\r\n            throw \"Não foi inserido e-mail\"\r\n        }\r\n    },\r\n    createUserWithAuth: async (usuario: Usuario) => {\r\n        if (usuario.email && usuario.senha) {\r\n            await firebaseAuth.createUserWithEmailAndPassword(usuario.email, usuario.senha)\r\n            let user = {...usuario}\r\n            delete user.senha\r\n            await UsuarioDAO.createUsuario(user)\r\n        } else {\r\n            throw \"Não foi inserido Usuário ou Senha\"\r\n        }\r\n    },\r\n    login: async (email: string, senha: string) => {\r\n        await firebaseAuth.signInWithEmailAndPassword(email, senha)\r\n        let res = await firebaseDatabase.collection(COLLECTION).doc(email).get()\r\n        if (res.exists) {\r\n            return {...res.data(), email: res.id}\r\n        }\r\n    }\r\n}\r\n\r\nexport default UsuarioDAO\r\n","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {BottomNavigation, BottomNavigationAction, Grid, Button} from \"@material-ui/core\";\r\nimport MoodIcon from \"@material-ui/icons/Mood\";\r\nimport SubjectIcon from \"@material-ui/icons/Subject\";\r\nimport LockOpen from \"@material-ui/icons/LockOpen\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport UsuarioDAO from \"../../DAOs/UsuarioDAO\";\r\nimport {useHistory} from 'react-router-dom';\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport \"./AccountPage.sass\"\r\n\r\nconst AccountPage = props => {\r\n\r\n    const [value, setValue] = React.useState(2)\r\n    const [errorPassword, setErrorPassword] = React.useState(false)\r\n    const [loading, setLoading] = React.useState(false)\r\n\r\n    const story = useHistory()\r\n\r\n    const useStyles = makeStyles({\r\n        root: {\r\n            position: 'fixed',\r\n            bottom: '5px',\r\n            width: '100%'\r\n        }\r\n    })\r\n\r\n    const onSubmit = async e => {\r\n        e.preventDefault()\r\n\r\n        const form = e.target\r\n\r\n        const login = {\r\n            email: form.email.value,\r\n            senha: form.senha.value,\r\n        }\r\n\r\n        if (form.senha.value === form.confirm_senha.value) {\r\n            try {\r\n                setLoading(true)\r\n                await UsuarioDAO.createUserWithAuth({...props.userData, email: login.email, senha: login.senha})\r\n                alert(\"Usuário criado com sucesso! Por favor, aguarde a criação do sistema para inciarmos.\");\r\n                story.push('/')\r\n            } catch (e) {\r\n                alert(e);\r\n            }\r\n        } else {\r\n            setErrorPassword(true)\r\n        }\r\n        setLoading(false)\r\n    }\r\n\r\n    const classes = useStyles()\r\n\r\n    return (\r\n        <div className={'account_page'}>\r\n            <div className={'content'}>\r\n                <h1>Registre-se para fazer Login</h1>\r\n                <form onSubmit={onSubmit}>\r\n                <Grid container spacing={2}>\r\n                    <Grid item xs={12}>\r\n                        <TextField\r\n                            fullWidth\r\n                            name={'email'}\r\n                            label={'E-mail'} variant={'outlined'}\r\n                            placeholder={'Exemplo: joao@mail.com'} required/>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <TextField\r\n                            fullWidth\r\n                            name={'senha'}\r\n                            type={'password'}\r\n                            label={'Senha'} variant={'outlined'}\r\n                            placeholder={'Informe aqui sua senha.'} required/>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <TextField\r\n                            error={errorPassword}\r\n                            fullWidth\r\n                            helperText={errorPassword ? 'Senhas não conferem': ''}\r\n                            type={'password'}\r\n                            name={'confirm_senha'}\r\n                            label={'Confirmar Senha'} variant={'outlined'}\r\n                            placeholder={'Reinsira sua senha'} required/>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <Button\r\n                            disabled={loading}\r\n                            type={'submit'}\r\n                            color={'primary'}\r\n                            fullWidth\r\n                            variant={'contained'}>\r\n                            Finalizar Cadastro\r\n                        </Button>\r\n                    </Grid>\r\n                </Grid>\r\n                </form>\r\n\r\n            </div>\r\n            <BottomNavigation\r\n                value={value}\r\n                showLabels\r\n                className={classes.root}\r\n            >\r\n                <BottomNavigationAction label=\"Bem-Vindo\" icon={<MoodIcon/>}/>\r\n                <BottomNavigationAction label=\"Cadastro\" icon={<SubjectIcon/>}/>\r\n                <BottomNavigationAction label=\"Conta\" icon={<LockOpen/>}/>\r\n            </BottomNavigation>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    userData: state.general.userData,\r\n});\r\nconst mapDispatchToProps = dispatch => ({});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AccountPage);\r\n","import React from 'react'\r\nimport \"./LoginPage.sass\"\r\nimport {connect} from 'react-redux'\r\nimport {Link, useHistory} from 'react-router-dom'\r\nimport {TextField, Button, Grid} from '@material-ui/core'\r\nimport UsuarioDAO from \"../../DAOs/UsuarioDAO\";\r\nimport {Actions} from \"../../redux/actions/actions\";\r\n\r\nconst LoginPage = props => {\r\n\r\n    const [loading, setLoading] = React.useState(false)\r\n    const story = useHistory()\r\n\r\n    const onSubmit = async e => {\r\n        e.preventDefault()\r\n        const form = e.target\r\n\r\n        let email = form.email.value,\r\n            senha = form.password.value\r\n\r\n        setLoading(true)\r\n        try {\r\n            const user = await UsuarioDAO.login(email, senha)\r\n            props.setUserLogged(user)\r\n            story.push('/edit')\r\n        } catch(e) {\r\n            alert(e.message)\r\n        }\r\n\r\n        setLoading(false)\r\n\r\n    }\r\n\r\n    return (\r\n        <div className={'login_page'}>\r\n            <form onSubmit={onSubmit}>\r\n                <h1>Login</h1>\r\n                <Grid container spacing={3}>\r\n                    <Grid item xs={12}>\r\n                        <TextField\r\n                            fullWidth\r\n                            variant={'outlined'}\r\n                            name={'email'}\r\n                            label={'E-mail'}/>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <TextField\r\n                            fullWidth\r\n                            variant={'outlined'}\r\n                            type={'password'}\r\n                            name={'password'}\r\n                            label={\"Senha\"} />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <Button\r\n                            variant={'contained'}\r\n                            color={'primary'}\r\n                            fullWidth\r\n                            disabled={loading}\r\n                            type={'submit'}>\r\n                            Fazer Login\r\n                        </Button>\r\n                        <p><Link onClick={() => alert(\"Ainda em produção. Contate os desenvolvedores.\")}>Esqueceu sua senha?</Link></p>\r\n                        <p>Voltar à página de <Link to={'/'}>Registro</Link></p>\r\n                    </Grid>\r\n                </Grid>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => ({});\r\nconst mapDispatchToProps = dispatch => ({\r\n    setUserLogged: user => dispatch({type: Actions.setUserLogged, payload: user})\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginPage);\r\n","import * as React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {BottomNavigation, BottomNavigationAction, MenuItem, Grid, InputAdornment, Button} from \"@material-ui/core\";\r\nimport MoodIcon from \"@material-ui/icons/Mood\";\r\nimport SubjectIcon from \"@material-ui/icons/Subject\";\r\nimport LockOpen from \"@material-ui/icons/LockOpen\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport \"./EditPage.sass\"\r\nimport {Usuario} from \"../../DAOs/UsuarioDAO\";\r\nimport {Actions} from \"../../redux/actions/actions\";\r\nimport {useHistory, Redirect} from 'react-router-dom';\r\n\r\nconst EditPage = props => {\r\n\r\n    const [value, setValue] = React.useState(1)\r\n    const [ala, setAla] = React.useState(\"Guarany\")\r\n    const [tempo, setTempo] = React.useState(1)\r\n    const story = useHistory()\r\n\r\n    const useStyles = makeStyles({\r\n        root: {\r\n            position: 'fixed',\r\n            bottom: '4px',\r\n            left: 0,\r\n            backgroundColor: '#FFF',\r\n            zIndex: 1001,\r\n            width: '100%'\r\n        },\r\n        textField: {\r\n            marginBottom: '10px'\r\n        }\r\n    })\r\n\r\n    const arrayTempoNegocio = () : Array<{value: number, label: string}> => {\r\n        let array = []\r\n        let maxYears = 5\r\n        //@ts-ignore\r\n        array.push({value: 6, label: 'Mais de 5 anos'})\r\n        for (let i = maxYears; i > 0; i--) {\r\n            if (i != 1) {\r\n                //@ts-ignore\r\n                array.push({value: i, label: i+' anos'})\r\n            } else {\r\n                //@ts-ignore\r\n                array.push({value: i, label: i+' ano'})\r\n            }\r\n        }\r\n        for (let i = 11; i > 2; i--) {\r\n            //@ts-ignore\r\n            array.push({value: i / 100, label: i + ' meses'})\r\n        }\r\n        //@ts-ignore\r\n        array.push({value: 2 / 100, label: 'menos de 3 meses'})\r\n\r\n        return array;\r\n    }\r\n\r\n    let tempoNegocio = arrayTempoNegocio()\r\n\r\n    const alas = [\"Guarany\", \"Cidade Nova\", \"Canaranas\", \"Campo Dourado\", \"Monte Sinai\", \"Riacho Doce\"]\r\n    const classes = useStyles()\r\n\r\n    const onSubmitForm = e => {\r\n        e.preventDefault()\r\n        const form = e.target\r\n\r\n        const userData : Usuario = {\r\n            nome: form.nome.value,\r\n            ala: form.ala.value,\r\n            nome_negocio: form.nome_negocio.value,\r\n            telefone: form.telefone.value,\r\n            endereco: form.endereco.value,\r\n            tempo_negocio: form.tempo_negocio.value,\r\n            definicao: form.definicao.value,\r\n            faturamento_mensal: form.faturamento_mensal.value,\r\n            oferecimento_produto: form.oferecimento_produto.value,\r\n        }\r\n\r\n        props.setUserData(userData)\r\n\r\n        story.push('/account')\r\n    }\r\n\r\n    if (props.userLogged) {\r\n        // @ts-ignore\r\n        return (\r\n            <div className={'register_page'}>\r\n\r\n                <h1>Bem-Vindo!</h1>\r\n                <p>Caso queira alterar seus dados na Comunidade dos Santos, altere abaixo.</p>\r\n                <form onSubmit={onSubmitForm}>\r\n                    <Grid container spacing={2}>\r\n                        <Grid item xs={6}>\r\n                            <TextField fullWidth\r\n                                       defaultValue={props.userLogged.nome}\r\n                                       name={'nome'}\r\n                                       className={classes.textField} label={'Nome'} variant={'outlined'}\r\n                                       placeholder={'Exemplo: João Silva'} required/>\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                            <TextField\r\n                                defaultValue={props.userLogged.nome_negocio}\r\n                                name={'nome_negocio'}\r\n                                fullWidth className={classes.textField} label={'Nome do Negócio'} variant={'outlined'}\r\n                                placeholder={'Exemplo: João Gás e Água'} required/>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <TextField\r\n                        className={classes.textField}\r\n                        select\r\n                        defaultValue={props.userLogged.ala}\r\n                        label={'Ala'}\r\n                        value={ala}\r\n                        name={'ala'}\r\n                        onChange={(e) => setAla(e.target.value)}\r\n                        variant={'outlined'}\r\n                        placeholder={'Exemplo: João Gás e Água'}\r\n                        required>\r\n                        {alas.map((ala, index) =>\r\n                            <MenuItem\r\n                                value={ala}\r\n                                key={index}>\r\n                                {ala}\r\n                            </MenuItem>)}\r\n                    </TextField>\r\n                    <Grid container spacing={2}>\r\n                        <Grid item xs={6}>\r\n                            <TextField\r\n                                name={'telefone'}\r\n                                fullWidth\r\n                                defaultValue={props.userLogged.telefone}\r\n                                className={classes.textField}\r\n                                label={'Telefone'} variant={'outlined'} placeholder={'Exemplo: 99999-9999'} required/>\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                            <TextField\r\n                                name={'email'}\r\n                                fullWidth\r\n                                defaultValue={props.userLogged.email}\r\n                                className={classes.textField}\r\n                                label={'E-mail'} variant={'outlined'} placeholder={'Exemplo: joao@mail.com'} required/>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <TextField\r\n                        defaultValue={props.userLogged.endereco}\r\n                        name={'endereco'}\r\n                        className={classes.textField}\r\n                        label={'Endereço'} variant={'outlined'} placeholder={'Exemplo: R. 42, nº 0'} required/>\r\n                    <TextField\r\n                        className={classes.textField}\r\n                        select\r\n                        defaultValue={props.userLogged.tempo_negocio}\r\n                        name={'tempo_negocio'}\r\n                        label={'Tempo de Negócio'}\r\n                        value={tempo}\r\n                        onChange={(e) => {\r\n                            //@ts-ignore\r\n                            setTempo(e.target.value)\r\n                        }}\r\n                        variant={'outlined'}\r\n                        placeholder={'Exemplo: João Gás e Água'}\r\n                        required>\r\n                        {tempoNegocio.map((tempo, index) =>\r\n                            <MenuItem\r\n                                value={tempo.value}\r\n                                key={index}>\r\n                                {tempo.label}\r\n                            </MenuItem>)}\r\n                    </TextField>\r\n                    <TextField\r\n                        className={classes.textField}\r\n                        defaultValue={props.userLogged.definicao}\r\n                        name={'definicao'}\r\n                        label={'Definição do Produto ou Serviço'} variant={'outlined'} placeholder={'Defina, com detalhes, todos os' +\r\n                    ' detalhes de seu produto ou seviço cujo o qual você oferece.'} required multiline/>\r\n                    <Grid container spacing={2}>\r\n                        <Grid item xs={6}>\r\n                            <TextField\r\n                                defaultValue={props.userLogged.faturamento_mensal}\r\n                                name={'faturamento_mensal'}\r\n                                fullWidth\r\n                                className={classes.textField}\r\n                                InputProps={{\r\n                                    startAdornment: <InputAdornment position={'start'}> R$ </InputAdornment>\r\n                                }}\r\n                                label={'Faturamento Mensal Médio'} variant={'outlined'} type={'number'} placeholder={'Exemplo: 2382,32'} required/>\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                            <TextField\r\n                                defaultValue={props.userLogged.oferecimento_produto}\r\n                                name={'oferecimento_produto'}\r\n                                fullWidth\r\n                                className={classes.textField}\r\n                                label={'Oferecimento do Produto'} variant={'outlined'} placeholder={'Exemplo: Produto Virtual, Físico ou Delivery'} required/>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Button type={'submit'} variant={'contained'} color={'primary'}>\r\n                        Confirmar Cadastro\r\n                    </Button>\r\n                </form>\r\n                <div className={'content'}>\r\n                    <BottomNavigation\r\n                        value={value}\r\n                        showLabels\r\n                        className={classes.root}\r\n                    >\r\n                        <BottomNavigationAction label=\"Cadastro\" icon={<SubjectIcon/>}/>\r\n                    </BottomNavigation>\r\n                </div>\r\n            </div>\r\n        );\r\n    } else {\r\n        return (<Redirect to={'/login'} />)\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    userLogged: state.general.userLogged,\r\n});\r\nconst mapDispatchToProps = dispatch => ({\r\n    setUserData: userData =>\r\n        dispatch({type: Actions.setUserData, payload: userData})\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(EditPage);\r\n","import React from 'react';\nimport './App.css';\nimport Store from \"./redux/store\";\nimport {Provider} from \"react-redux\";\nimport {HashRouter, Route} from 'react-router-dom'\nimport IntroductionPage from \"./pages/IntroductionPage/IntroductionPage\";\nimport RegisterPage from \"./pages/RegisterPage/RegisterPage\";\nimport AccountPage from \"./pages/AccountPage/AccountPage\";\nimport LoginPage from \"./pages/LoginPage/LoginPage\";\nimport EditPage from \"./pages/EditPage/EditPage\";\n\nfunction App() {\n  return (\n      <Provider store={Store}>\n        <HashRouter>\n            <Route path={'/'} component={IntroductionPage} exact={true} />\n            <Route path={'/register'} component={RegisterPage} />\n            <Route path={'/account'} component={AccountPage} />\n            <Route path={'/login'} component={LoginPage} />\n            <Route path={'/edit'} component={EditPage} />\n        </HashRouter>\n      </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}